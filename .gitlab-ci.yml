

stages:
  - validate
  - test
  - plan
  - apply

validate:
  stage: validate
  image:
    name: "hashicorp/terraform:latest"
    entrypoint:
      - "/usr/bin/env"
      - "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
  script:
    - terraform init
    - terraform validate
  artifacts:
    paths:
      - .terraform

terratest:
  stage: test
  image:
    name: "hashicorp/terraform:full"
    entrypoint:
      - "/usr/bin/env"
      - "PATH=/go/bin:/usr/local/go/bin/:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
  script:
    - currdir=$(pwd)
    - apk add --no-cache gcc libc-dev bind-tools
    - go get github.com/gruntwork-io/terratest/modules/aws
    - go get -u -d github.com/magefile/mage
    - cd $GOPATH/src/github.com/magefile/mage
    - go run bootstrap.go
    - cd $currdir
    - mage full

plan:
  stage: plan
  image:
    name: "hashicorp/terraform:full"
    entrypoint:
      - "/usr/bin/env"
      - "PATH=/go/bin:/usr/local/go/bin/:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
  script:
    - rm -rf .terraform
    - terraform --version
    - mkdir -p ./creds
    - echo $SERVICEACCOUNT | base64 -d > ./creds/serviceaccount.json
    - terraform init  
    - terraform plan --var-file="vars/variables.tfvars" -out "planfile"
  dependencies:
    - validate
  artifacts:
    paths:
      - planfile

apply:
  stage: apply
  image:
    name: "hashicorp/terraform:full"
    entrypoint:
      - "/usr/bin/env"
      - "PATH=/go/bin:/usr/local/go/bin/:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
  script:
    - rm -rf .terraform
    - terraform --version
    - mkdir -p ./creds
    - echo $SERVICEACCOUNT | base64 -d > ./creds/serviceaccount.json
    - terraform init  
    - terraform apply -input=false "planfile"
  dependencies:
    - plan
